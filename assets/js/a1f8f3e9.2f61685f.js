"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7756],{5581:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>a});var i=s(4848),n=s(8453);const l={sidebar_position:2,title:"Info.plist"},r="Property List (PLIST) Task Configuration (plist)",d={id:"for-developers/ios-tasks/plist",title:"Info.plist",description:"Modify Info.plist file",source:"@site/docs/for-developers/ios-tasks/plist.md",sourceDirName:"for-developers/ios-tasks",slug:"/for-developers/ios-tasks/plist",permalink:"/integrate/docs/for-developers/ios-tasks/plist",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Info.plist"},sidebar:"tutorialSidebar",previous:{title:"AppDelegate.mm",permalink:"/integrate/docs/for-developers/ios-tasks/app_delegate"},next:{title:"Podfile",permalink:"/integrate/docs/for-developers/ios-tasks/podfile"}},o={},a=[{value:"Task Properties",id:"task-properties",level:2},{value:"Action Properties",id:"action-properties",level:2},{value:"Strategy Property",id:"strategy-property",level:3},{value:"Example",id:"example",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.h1,{id:"property-list-plist-task-configuration-plist",children:["Property List (PLIST) Task Configuration (",(0,i.jsx)(t.code,{children:"plist"}),")"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.em,{children:"Modify Info.plist file"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"plist"})," task allows you to modify property list (plist) files, typically used in iOS projects, to add or modify values."]}),"\n",(0,i.jsx)(t.h2,{id:"task-properties",children:"Task Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Property"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"type"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:'"plist", required'}),(0,i.jsx)(t.td,{children:'Specifies the task type, which should be set to "plist" for this task.'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"name"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"string"}),(0,i.jsxs)(t.td,{children:["An optional name for the task. If provided, the task state will be saved as a variable. Visit ",(0,i.jsx)(t.a,{href:"../guides/states",children:"Task and Action States"})," page to learn more."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"label"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"string"}),(0,i.jsx)(t.td,{children:"An optional label or description for the task."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"when"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"object"}),(0,i.jsxs)(t.td,{children:["Visit ",(0,i.jsx)(t.a,{href:"../guides/when",children:"Conditional Tasks and Actions"})," page to learn how to execute task conditionally."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"target"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"string"}),(0,i.jsx)(t.td,{children:"Specifies the target which contains the plist file. Omitting this field means the plist of main app will be modified."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"actions"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Array<",(0,i.jsx)(t.a,{href:"#action-properties",children:"Action"}),">, required"]}),(0,i.jsx)(t.td,{children:"An array of action items that define the modifications to be made in the file."})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"action-properties",children:"Action Properties"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Property"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"name"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"string"}),(0,i.jsxs)(t.td,{children:["An optional name for the task. If provided, the task state will be saved as a variable. Visit ",(0,i.jsx)(t.a,{href:"../guides/states",children:"Task and Action States"})," page to learn more."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"when"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"object"}),(0,i.jsxs)(t.td,{children:["Visit ",(0,i.jsx)(t.a,{href:"../guides/when",children:"Conditional Tasks and Actions"}),"  page to learn how to execute action conditionally."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"set"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"object"}),(0,i.jsx)(t.td,{children:"An object containing key-value pairs that you want to add or modify in the plist."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"strategy"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["one of ",(0,i.jsx)(t.a,{href:"#strategy-property",children:"Strategy"})]}),(0,i.jsx)(t.td,{children:"Specifies how to handle merging new and existing values."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"strategy-property",children:"Strategy Property"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"assign"}),": (default) Overwrites the entire key with the new value."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"append"}),": Appends values only if the key does not already exist."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"merge"}),": Merges new values into existing dictionaries."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"merge_concat"}),": Merges dictionaries while concatenating arrays."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"merge_distinct"}),": Merges dictionaries while ensuring that objects with deep equality are distinct."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'type: plist\nlabel: Add or Modify Plist Entries\nactions:\n  - set:\n      MY_KEY: "my value"\n      ANOTHER_KEY: "another value"\n    strategy: assign\n  - set:\n      NEW_KEY: "new value"\n    strategy: merge\n'})}),"\n",(0,i.jsxs)(t.p,{children:["In this example, the ",(0,i.jsx)(t.code,{children:"plist"})," task is used to add or modify entries in a plist file. Two actions are specified:"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["The first action sets the value of ",(0,i.jsx)(t.code,{children:"MY_KEY"})," to ",(0,i.jsx)(t.code,{children:'"my value"'})," using the ",(0,i.jsx)(t.code,{children:"assign"})," strategy, which overwrites the value if it already exists."]}),"\n",(0,i.jsxs)(t.li,{children:["The second action sets the value of ",(0,i.jsx)(t.code,{children:"NEW_KEY"})," to ",(0,i.jsx)(t.code,{children:'"new value"'})," using the ",(0,i.jsx)(t.code,{children:"merge"})," strategy, which merges new values into existing dictionaries."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"plist"})," task provides a flexible way to modify plist files in your iOS project, enabling you to tailor your app's behavior to your needs."]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>d});var i=s(6540);const n={},l=i.createContext(n);function r(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);