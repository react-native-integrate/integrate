"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2536],{3286:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"guides/configuration","title":"Configure Integration","description":"React Native Integrate now supports a configuration file system that allows you to pre-define options for packages to use while implementing their changes.","source":"@site/docs/guides/configuration.md","sourceDirName":"guides","slug":"/guides/configuration","permalink":"/integrate/docs/guides/configuration","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Variables","permalink":"/integrate/docs/guides/variables"},"next":{"title":"Conditional Tasks","permalink":"/integrate/docs/guides/when"}}');var t=i(4848),r=i(8453);const s={sidebar_position:2},a="Configure Integration",l={},c=[{value:"Configuration File",id:"configuration-file",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Plugins",id:"plugins",level:3},{value:"Using Configuration in Your Project",id:"using-configuration-in-your-project",level:2},{value:"Plugin Development",id:"plugin-development",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Best Practices",id:"best-practices",level:2}];function u(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"configure-integration",children:"Configure Integration"})}),"\n",(0,t.jsx)(e.p,{children:"React Native Integrate now supports a configuration file system that allows you to pre-define options for packages to use while implementing their changes."}),"\n",(0,t.jsx)(e.p,{children:"Most of the time you won't need this because options can be entered through prompts."}),"\n",(0,t.jsx)(e.p,{children:"However, in some cases complex inputs are needed that can be defined here."}),"\n",(0,t.jsx)(e.h2,{id:"configuration-file",children:"Configuration File"}),"\n",(0,t.jsxs)(e.p,{children:["Create an ",(0,t.jsx)(e.code,{children:"integrate.config.js"})," file in your project root to configure React Native Integrate. The configuration file should export an object that matches the ",(0,t.jsx)(e.code,{children:"IntegrateConfig"})," interface."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"// integrate.config.js\nmodule.exports = {\n  plugins: [\n    // Plugin configurations\n    ['plugin-with-config', {\n      // Plugin specific configuration\n      option1: 'value1',\n      option2: 'value2'\n    }]\n  ]\n};\n"})}),"\n",(0,t.jsx)(e.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,t.jsx)(e.h3,{id:"plugins",children:"Plugins"}),"\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.code,{children:"plugins"})," array allows you to specify which plugins to use and their configurations:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-javascript",children:"plugins: [\n  ['my-plugin', {\n    // Plugin specific configuration options\n    config1: 'value1'\n  }]\n]\n"})}),"\n",(0,t.jsx)(e.h2,{id:"using-configuration-in-your-project",children:"Using Configuration in Your Project"}),"\n",(0,t.jsx)(e.p,{children:"The configuration file is automatically loaded when running react-native-integrate commands. The system will:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:["Look for ",(0,t.jsx)(e.code,{children:"integrate.config.js"})," in your project root"]}),"\n",(0,t.jsx)(e.li,{children:"Load and validate the configuration"}),"\n",(0,t.jsx)(e.li,{children:"Apply plugin configurations as needed"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"plugin-development",children:"Plugin Development"}),"\n",(0,t.jsx)(e.p,{children:"If you're developing an integration using complex options, you can access the configuration in two ways:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"In JavaScript/TypeScript integration scripts:"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-typescript",children:"// Access configuration in your integration script\nimport { getConfig } from '@react-native-integrate/core';\nconst pluginConfig = getConfig();\n"})}),"\n",(0,t.jsxs)(e.ol,{start:"2",children:["\n",(0,t.jsx)(e.li,{children:"In integration YAML files:"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"# Access configuration in your integration.yml\nsteps:\n  - when:\n      config:\n        someOption: true\n    task: someTask\n    # This step runs only when someOption is true in the config\n"})}),"\n",(0,t.jsx)(e.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(e.p,{children:"If there are issues with your configuration file:"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Syntax errors will be reported with detailed error messages"}),"\n",(0,t.jsx)(e.li,{children:"Invalid configuration will trigger appropriate warnings"}),"\n",(0,t.jsx)(e.li,{children:"Missing configuration file is handled gracefully - the system will use default settings"}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsx)(e.li,{children:"Keep your configuration file in the project root"}),"\n",(0,t.jsx)(e.li,{children:"Document plugin-specific configuration options"}),"\n",(0,t.jsx)(e.li,{children:"Version control your configuration file"}),"\n",(0,t.jsx)(e.li,{children:"Use TypeScript for better type checking in your configuration file"}),"\n"]})]})}function g(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>s,x:()=>a});var o=i(6540);const t={},r=o.createContext(t);function s(n){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),o.createElement(r.Provider,{value:e},n.children)}}}]);