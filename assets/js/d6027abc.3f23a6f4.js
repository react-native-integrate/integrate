"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6766],{3547:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"info","title":"Info","description":"To check the availability of integration for a specific package and view related information, you can use the following command:","source":"@site/docs/info.md","sourceDirName":".","slug":"/info","permalink":"/integrate/docs/info","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Usage","permalink":"/integrate/docs/usage"},"next":{"title":"Upgrade React Native","permalink":"/integrate/docs/upgrade/"}}');var a=t(4848),o=t(8453);const r={sidebar_position:3},s="Info",c={},l=[{value:"Example:",id:"example",level:2},{value:"What Does It Do?",id:"what-does-it-do",level:2},{value:"Use Cases",id:"use-cases",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"info",children:"Info"})}),"\n",(0,a.jsx)(n.p,{children:"To check the availability of integration for a specific package and view related information, you can use the following command:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npx react-native-integrate info <package-name>\n\n# or, with global installation\nrni info <package-name>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npx react-native-integrate info @react-native-firebase/app\n"})}),"\n",(0,a.jsx)(n.h2,{id:"what-does-it-do",children:"What Does It Do?"}),"\n",(0,a.jsx)(n.p,{children:"This command allows you to verify the integration status, including the availability of local or remote configuration files. It provides details on how to proceed with the integration."}),"\n",(0,a.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Check Integration Availability"}),": Verify if a package has a supported integration configuration."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Get Remote Config Path"}),": Use this command to get the remote path before submitting a configuration to the ",(0,a.jsx)(n.a,{href:"https://github.com/react-native-integrate/configs",children:"public config repo"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Troubleshoot Integration"}),": If an integration fails, use this command to check if the configuration is available or if there are any errors."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var i=t(6540);const a={},o=i.createContext(a);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);