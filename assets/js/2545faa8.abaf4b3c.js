"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6521],{8092:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var n=s(4848),l=s(8453);const i={sidebar_position:3,title:"Shell Commands"},r="Shell Task Configuration (shell)",a={id:"guides/task-types/other-tasks/shell",title:"Shell Commands",description:"Run shell commands",source:"@site/docs/guides/task-types/other-tasks/shell.md",sourceDirName:"guides/task-types/other-tasks",slug:"/guides/task-types/other-tasks/shell",permalink:"/integrate/docs/guides/task-types/other-tasks/shell",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Shell Commands"},sidebar:"tutorialSidebar",previous:{title:"File System Operations",permalink:"/integrate/docs/guides/task-types/other-tasks/fs"},next:{title:"JSON Files",permalink:"/integrate/docs/guides/task-types/other-tasks/json"}},o={},d=[{value:"Task Properties",id:"task-properties",level:2},{value:"Action Properties",id:"action-properties",level:2},{value:"Example",id:"example",level:2},{value:"Example:",id:"example-1",level:4}];function c(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h1,{id:"shell-task-configuration-shell",children:["Shell Task Configuration (",(0,n.jsx)(t.code,{children:"shell"}),")"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Run shell commands"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"shell"})," task type allows you to run shell commands."]}),"\n",(0,n.jsx)(t.h2,{id:"task-properties",children:"Task Properties"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Property"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"task"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'"shell", required'}),(0,n.jsx)(t.td,{children:'Specifies the task type, which should be set to "shell" for this task.'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"name"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"string"}),(0,n.jsxs)(t.td,{children:["An optional name for the task. If provided, the task state will be saved as a variable. Visit ",(0,n.jsx)(t.a,{href:"../../states",children:"Task and Action States"})," page to learn more."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"label"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"string"}),(0,n.jsx)(t.td,{children:"An optional label or description for the task."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"when"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"object"}),(0,n.jsxs)(t.td,{children:["Visit ",(0,n.jsx)(t.a,{href:"../../when",children:"Conditional Tasks and Actions"})," page to learn how to execute task conditionally."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"actions"}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Array<",(0,n.jsx)(t.a,{href:"#action-properties",children:"Action"}),">, required"]}),(0,n.jsx)(t.td,{children:"An array of action items that define the modifications to be made in the file."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"action-properties",children:"Action Properties"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Property"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"name"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"string"}),(0,n.jsxs)(t.td,{children:["An optional name for the task. If provided, the task state will be saved as a variable. Visit ",(0,n.jsx)(t.a,{href:"../../states",children:"Task and Action States"})," page to learn more."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"when"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"object"}),(0,n.jsxs)(t.td,{children:["Visit ",(0,n.jsx)(t.a,{href:"../../when",children:"Conditional Tasks and Actions"}),"  page to learn how to execute action conditionally."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"command"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"string, required"}),(0,n.jsxs)(t.td,{children:["The process name to spawn. Command can have simple args, parser supports quotes. For more complex args, use ",(0,n.jsx)(t.code,{children:"args"})," property."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"args"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"Array<string>"}),(0,n.jsx)(t.td,{children:"Array of args to be past directly to process."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"cwd"}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:"string"}),(0,n.jsx)(t.td,{children:"Working directory to run shell. Must be relative to the project root. Default is project root."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.p,{children:"Here's an example of how to use shell task in a configuration file:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:'steps:\n  - task: shell\n    label: Embedding assets\n    actions:\n      - command: npx react-native-asset\n      - command: some-command --some-flag "some literal args"\n      - command: other-command\n        args:\n          - --some-flag\n          - "some \\"complex\\" args"\n'})}),"\n",(0,n.jsxs)(t.admonition,{type:"tip",children:[(0,n.jsxs)(t.p,{children:["Specify ",(0,n.jsx)(t.code,{children:"name"})," field for this action to expose the ",(0,n.jsx)(t.code,{children:"name.output"})," variable which will hold the output of the process."]}),(0,n.jsx)(t.h4,{id:"example-1",children:"Example:"}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:"  # run command \n  - command: npx react-native-asset\n    name: cmd_asset # Give it a name\n\n  # you can run another command if previous was success and output contains some value\n  - when:\n      cmd_asset: done\n      cmd_asset.output: # use the name here\n        $regex: somevalue\n    command: some-other-command\n"})})]}),"\n",(0,n.jsxs)(t.admonition,{type:"warning",children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"shell"})," commands that are used in package integrations will always ask permission from user before execution. User may choose to skip the execution,\nso don't rely on it too much."]}),(0,n.jsxs)(t.p,{children:["It does not ask permission when used in ",(0,n.jsx)(t.a,{href:"../../../upgrade/configuration",children:"upgrade.yml"}),"."]})]})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>a});var n=s(6540);const l={},i=n.createContext(l);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);